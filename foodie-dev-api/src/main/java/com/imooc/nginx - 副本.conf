
#设置worker进程的用户，指的linux中的用户，会涉及到nginx操作目录或文件的一些权限，默认为 nobody
#user  nobody;
worker_processes  1; #nginx的工作进程数量,默认是1

# nginx 日志级别 debug | info | notice | warn | error | crit | alert | emerg ，错误级别从左到右越来越大
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

# 设置nginx进程 pid
#pid        logs/nginx.pid;

#事件处理 设置工作模式
events {
    use epoll;#默认使用epoll
    worker_connections  1024;#每个worker允许连接客户端的最大连接数
}

# http 是指令块，针对http网络传输的一些指令配置
http {
    # include 引入外部配置，提高可读性，避免单个配置文件过大
    include       mime.types;
    default_type  application/octet-stream;

    #设定日志格式， main 为定义的格式名称，如此 access_log 就可以直接使用这个变量了
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on; #用于文件的高效传输
    #tcp_nopush     on; #当数据包累积到一定大小后，在去发送

    #keepalive_timeout  0;
    keepalive_timeout  65; #客户端链接服务器超时时间

    #gzip  on;

    server {
        listen       80;  # 监听的端口号
        server_name  localhost;  #ip或者域名

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # 映射：将/映射到root既html上
        # 然后默认（index） 进入 index.html index.htm
        location / {
            root   html;
            index  index.html index.htm;
        }


        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}



    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }`
    #}

}
